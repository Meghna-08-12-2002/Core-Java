package com.xworkz.Override.runner;

import com.xworkz.Override.internal.*;

public class Main {
    public static void main(String[] args) {
        Shape shapeRef = new Shape();
        shapeRef.draw();
        System.out.println("--------------------------");
        Shape shapeCircle = new Circle();
        shapeCircle.draw();
        System.out.println("--------------------------");
        Circle circleRef = new Circle();
        circleRef.draw();
        circleRef.rotate(shapeRef);
        circleRef.rotate(null);
        System.out.println("==========================");

        Doll plainDoll = new Doll();
        plainDoll.show();
        System.out.println("--------------------------");
        Doll polyDoll = new FashionDoll();
        polyDoll.show();
        System.out.println("--------------------------");
        FashionDoll fancyDoll = new FashionDoll();
        fancyDoll.show();
        fancyDoll.accessorize(plainDoll);
        fancyDoll.accessorize(null);
        System.out.println("==========================");

        Alovera basicAlovera = new Alovera();
        basicAlovera.apply();
        System.out.println("--------------------------");
        Alovera polyAlovera = new Medical();
        polyAlovera.apply();
        System.out.println("--------------------------");
        Medical medAlovera = new Medical();
        medAlovera.apply();
        medAlovera.soothe(basicAlovera);
        medAlovera.soothe(null);
        System.out.println("==========================");

        Pin basicPin = new Pin();
        basicPin.use();
        System.out.println("--------------------------");
        Pin polyPin = new SafetyPin();
        polyPin.use();
        System.out.println("--------------------------");
        SafetyPin safetyPin = new SafetyPin();
        safetyPin.use();
        safetyPin.lock(basicPin);
        safetyPin.lock(null);
        System.out.println("==========================");

        Plaster basicPlaster = new Plaster();
        basicPlaster.apply();
        System.out.println("-------------------------");
        Plaster polyPlaster = new MedicalPlaster();
        polyPlaster.apply();
        System.out.println("-------------------------");
        MedicalPlaster medPlaster = new MedicalPlaster();
        medPlaster.apply();
        medPlaster.adhere(basicPlaster);
        medPlaster.adhere(null);
        System.out.println("===========================");

        Sticker basicSticker = new Sticker();
        basicSticker.stick();
        System.out.println("-------------------------");
        Sticker polySticker = new FancySticker();
        polySticker.stick();
        System.out.println("-------------------------");
        FancySticker fancySticker = new FancySticker();
        fancySticker.stick();
        fancySticker.reposition(basicSticker);
        fancySticker.reposition(null);
        System.out.println("===========================");

        Finger basicFinger = new Finger();
        basicFinger.flex();
        System.out.println("--------------------------");
        Finger polyFinger = new RingFinger();
        polyFinger.flex();
        System.out.println("--------------------------");
        RingFinger ringFinger = new RingFinger();
        ringFinger.flex();
        ringFinger.wearRing(basicFinger);
        ringFinger.wearRing(null);
        System.out.println("==========================");

        Nail basicNail = new Nail();
        basicNail.file();
        System.out.println("--------------------------");
        Nail polyNail = new ManicureNail();
        polyNail.file();
        System.out.println("--------------------------");
        ManicureNail manicureNail = new ManicureNail();
        manicureNail.file();
        manicureNail.polish(basicNail);
        manicureNail.polish(null);
        System.out.println("==========================");

        Fevikwik normal = new Fevikwik();
        normal.open();
        System.out.println("--------------------------");
        Fevikwik bond = new InstantFevikwik();
        bond.open();
        System.out.println("--------------------------");
        InstantFevikwik fast = new InstantFevikwik();
        fast.open();
        fast.glue(normal);
        fast.glue(null);
        System.out.println("==========================");

        Led led = new Led();
        led.glow();
        System.out.println("--------------------------");
        Led ledRef = new TubeLed();
        ledRef.glow();
        System.out.println("--------------------------");
        TubeLed tube = new TubeLed();
        tube.glow();
        tube.adjustBrightness(led);
        tube.adjustBrightness(null);
        System.out.println("==========================");

        Neck neck = new Neck();
        neck.bend();
        System.out.println("--------------------------");
        Neck stiffRef = new StiffNeck();
        stiffRef.bend();
        System.out.println("--------------------------");
        StiffNeck stiff = new StiffNeck();
        stiff.bend();
        stiff.massage(neck);
        stiff.massage(null);
        System.out.println("==========================");

        Earrings earrings = new Earrings();
        earrings.wear();
        System.out.println("--------------------------");
        Earrings ref = new StudEarrings();
        ref.wear();
        System.out.println("--------------------------");
        StudEarrings studs = new StudEarrings();
        studs.wear();
        studs.clean(earrings);
        studs.clean(null);
        System.out.println("==========================");

        Blush blush = new Blush();
        blush.apply();
        System.out.println("--------------------------");
        Blush soft = new CreamBlush();
        soft.apply();
        System.out.println("--------------------------");
        CreamBlush creamy = new CreamBlush();
        creamy.apply();
        creamy.blend(blush);
        creamy.blend(null);
        System.out.println("==========================");

        Eyeliner basic = new Eyeliner();
        basic.draw();
        System.out.println("--------------------------");
        Eyeliner liquidRef = new LiquidEyeliner();
        liquidRef.draw();
        System.out.println("--------------------------");
        LiquidEyeliner smooth = new LiquidEyeliner();
        smooth.draw();
        smooth.waterproof(basic);
        smooth.waterproof(null);
        System.out.println("==========================");

        Lipstick classic = new Lipstick();
        classic.apply();
        System.out.println("--------------------------");
        Lipstick matteRef = new MatteLipstick();
        matteRef.apply();
        System.out.println("--------------------------");
        MatteLipstick bold = new MatteLipstick();
        bold.apply();
        bold.longLasting(classic);
        bold.longLasting(null);
        System.out.println("==========================");

        Keyboard standard = new Keyboard();
        standard.type();
        System.out.println("--------------------------");
        Keyboard mechRef = new MechanicalKeyboard();
        mechRef.type();
        System.out.println("--------------------------");
        MechanicalKeyboard mech = new MechanicalKeyboard();
        mech.type();
        mech.backlight(standard);
        mech.backlight(null);
        System.out.println("==========================");

        Mouse mouse = new Mouse();
        mouse.click();
        System.out.println("--------------------------");
        Mouse wirelessRef = new WirelessMouse();
        wirelessRef.click();
        System.out.println("--------------------------");
        WirelessMouse wireless = new WirelessMouse();
        wireless.click();
        wireless.connect(mouse);
        wireless.connect(null);
        System.out.println("==========================");

        Curd plain = new Curd();
        plain.eat();
        System.out.println("--------------------------");
        Curd flavoredRef = new FlavoredCurd();
        flavoredRef.eat();
        System.out.println("--------------------------");
        FlavoredCurd sweet = new FlavoredCurd();
        sweet.eat();
        sweet.chill(plain);
        sweet.chill(null);
        System.out.println("==========================");

        Traffic general = new Traffic();
        general.control();
        System.out.println("--------------------------");
        Traffic signalRef = new SignalTraffic();
        signalRef.control();
        System.out.println("--------------------------");
        SignalTraffic signal = new SignalTraffic();
        signal.control();
        signal.monitor(general);
        signal.monitor(null);
        System.out.println("==========================");

        Foot regular = new Foot();
        regular.move();
        System.out.println("--------------------------");
        Foot bareRef = new BareFoot();
        bareRef.move();
        System.out.println("--------------------------");
        BareFoot bare = new BareFoot();
        bare.move();
        bare.feel(regular);
        bare.feel(null);
        System.out.println("==========================");

        Leaf leaf = new Leaf();
        leaf.fall();
        System.out.println("--------------------------");
        Leaf greenRef = new GreenLeaf();
        greenRef.fall();
        System.out.println("--------------------------");
        GreenLeaf green = new GreenLeaf();
        green.fall();
        green.photosynthesis(leaf);
        green.photosynthesis(null);
        System.out.println("==========================");

        Candle candle = new Candle();
        candle.light();
        System.out.println("--------------------------");
        Candle scentedRef = new ScentedCandle();
        scentedRef.light();
        System.out.println("--------------------------");
        ScentedCandle scented = new ScentedCandle();
        scented.light();
        scented.releaseFragrance(candle);
        scented.releaseFragrance(null);
        System.out.println("==========================");

        Mop mop1 = new Mop();
        mop1.clean();
        System.out.println("--------------------------");
        Mop mop2 = new SprayMop();
        mop2.clean();
        System.out.println("--------------------------");
        SprayMop mop3 = new SprayMop();
        mop3.clean();
        mop3.sprayLiquid(mop1);
        mop3.sprayLiquid(null);
        System.out.println("==========================");

        Park park1 = new Park();
        park1.open();
        System.out.println("--------------------------");
        Park park2 = new ThemePark();
        park2.open();
        System.out.println("--------------------------");
        ThemePark park3 = new ThemePark();
        park3.open();
        park3.launchRide(park1);
        park3.launchRide(null);
        System.out.println("==========================");

        Match m1 = new Match();
        m1.start();
        System.out.println("--------------------------");
        Match m2 = new CricketMatch();
        m2.start();
        System.out.println("--------------------------");
        CricketMatch m3 = new CricketMatch();
        m3.start();
        m3.toss(m1);
        m3.toss(null);
        System.out.println("==========================");

        Elevator e1 = new Elevator();
        e1.move();
        System.out.println("--------------------------");
        Elevator e2 = new SmartElevator();
        e2.move();
        System.out.println("--------------------------");
        SmartElevator e3 = new SmartElevator();
        e3.move();
        e3.autoClose(e1);
        e3.autoClose(null);
        System.out.println("==========================");

        Clock clock = new Clock();
        clock.showTime();
        System.out.println("--------------------------");
        Clock analog = new WallClock();
        analog.showTime();
        System.out.println("--------------------------");
        WallClock wall = new WallClock();
        wall.showTime();
        wall.chime(clock);
        wall.chime(null);
        System.out.println("==========================");

        Container container = new Container();
        container .store();
        System.out.println("--------------------------");
        Container plastic = new PlasticContainer();
        plastic.store();
        System.out.println("--------------------------");
        PlasticContainer specific = new PlasticContainer();
        specific.store();
        specific.seal(container );
        specific.seal(null);
        System.out.println("==========================");

        Flask flask = new Flask();
        flask.carry();
        System.out.println("--------------------------");
        Flask thermos = new SteelFlask();
        thermos.carry();
        System.out.println("--------------------------");
        SteelFlask hot = new SteelFlask();
        hot.carry();
        hot.insulate(flask);
        hot.insulate(null);
        System.out.println("==========================");

        Hair generic = new Hair();
        generic.style();
        System.out.println("--------------------------");
        Hair curly = new CurlyHair();
        curly.style();
        System.out.println("--------------------------");
        CurlyHair natural = new CurlyHair();
        natural.style();
        natural.moisturize(generic);
        natural.moisturize(null);
        System.out.println("==========================");

        Rod rod = new Rod();
        rod.support();
        System.out.println("--------------------------");
        Rod iron = new IronRod();
        iron.support();
        System.out.println("--------------------------");
        IronRod strong = new IronRod();
        strong.support();
        strong.weld(rod);
        strong.weld(null);
        System.out.println("==========================");

        Oven oven = new Oven();
        oven.heat();
        System.out.println("--------------------------");
        Oven quick = new MicrowaveOven();
        quick.heat();
        System.out.println("--------------------------");
        MicrowaveOven mw = new MicrowaveOven();
        mw.heat();
        mw.defrost(oven);
        mw.defrost(null);
        System.out.println("==========================");

        Fork fork = new Fork();
        fork.pick();
        System.out.println("--------------------------");
        Fork stainless = new SteelFork();
        stainless.pick();
        System.out.println("--------------------------");
        SteelFork shiny = new SteelFork();
        shiny.pick();
        shiny.polish(fork);
        shiny.polish(null);
        System.out.println("==========================");

        Kit kit = new Kit();
        kit.open();
        System.out.println("--------------------------");
        Kit aid = new FirstAidKit();
        aid.open();
        System.out.println("--------------------------");
        FirstAidKit medical = new FirstAidKit();
        medical.open();
        medical.sanitize(kit);
        medical.sanitize(null);
        System.out.println("==========================");

        Spoon spoon = new Spoon();
        spoon.scoop();
        System.out.println("--------------------------");
        Spoon fancy = new SilverSpoon();
        fancy.scoop();
        System.out.println("--------------------------");
        SilverSpoon shine = new SilverSpoon();
        shine.scoop();
        shine.shine(spoon);
        shine.shine(null);
        System.out.println("==========================");

        WaterCanal mainCanal = new WaterCanal();
        mainCanal.flow();
        System.out.println("--------------------------");
        WaterCanal branchCanal = new IrrigationCanal();
        branchCanal.flow();
        System.out.println("--------------------------");
        IrrigationCanal irrigation = new IrrigationCanal();
        irrigation.flow();
        irrigation.clean(mainCanal);
        irrigation.clean(null);
        System.out.println("==========================");

        Straightner straightner = new Straightner();
        straightner.heat();
        System.out.println("--------------------------");
        Straightner salon = new HairStraightner();
        salon.heat();
        System.out.println("--------------------------");
        HairStraightner advanced = new HairStraightner();
        advanced.heat();
        advanced.straighten(straightner);
        advanced.straighten(null);
        System.out.println("==========================");

        Moisturizer moisturizer = new Moisturizer();
        moisturizer.apply();
        System.out.println("--------------------------");
        Moisturizer facial = new FaceMoisturizer();
        facial.apply();
        System.out.println("--------------------------");
        FaceMoisturizer faceCare = new FaceMoisturizer();
        faceCare.apply();
        faceCare.hydrate(moisturizer);
        faceCare.hydrate(null);
        System.out.println("==========================");

        Tent tent = new Tent();
        tent.setUp();
        System.out.println("--------------------------");
        Tent travel = new CampingTent();
        travel.setUp();
        System.out.println("--------------------------");
        CampingTent hiking = new CampingTent();
        hiking.setUp();
        hiking.pack(tent);
        hiking.pack(null);
        System.out.println("==========================");

        Pendrive pendrive= new Pendrive();
        pendrive.store();
        System.out.println("--------------------------");
        Pendrive pendrive1 = new SandiskPendrive();
        pendrive1.store();
        System.out.println("--------------------------");
        SandiskPendrive sandisk = new SandiskPendrive();
        sandisk.store();
        sandisk.transfer(pendrive);
        sandisk.transfer(null);
        System.out.println("==========================");


        Stepler  stepler= new Stepler();
        stepler.bind();
        System.out.println("--------------------------");
        Stepler industrial = new HeavyStepler();
        industrial.bind();
        System.out.println("--------------------------");
        HeavyStepler heavy = new HeavyStepler();
        heavy.bind();
        heavy.reload(stepler);
        heavy.reload(null);
        System.out.println("==========================");

        Mic corded = new Mic();
        corded.record();
        System.out.println("--------------------------");
        Mic bluetooth = new WirelessMic();
        bluetooth.record();
        System.out.println("--------------------------");
        WirelessMic collarMic = new WirelessMic();
        collarMic.record();
        collarMic.connect(corded);
        collarMic.connect(null);
        System.out.println("==========================");

        PowerBank power = new PowerBank();
        power.charge();
        System.out.println("--------------------------");
        PowerBank turbo = new FastChargePowerBank();
        turbo.charge();
        System.out.println("--------------------------");
        FastChargePowerBank miPower = new FastChargePowerBank();
        miPower.charge();
        miPower.boost(power);
        miPower.boost(null);
        System.out.println("==========================");

        Adopter wallAdapter = new Adopter();
        wallAdapter.connect();
        System.out.println("--------------------------");
        Adopter usbTypeC = new USBAdopter();
        usbTypeC.connect();
        System.out.println("--------------------------");
        USBAdopter fastAdapter = new USBAdopter();
        fastAdapter.connect();
        fastAdapter.transfer(wallAdapter);
        fastAdapter.transfer(null);
        System.out.println("==========================");

        Charger wired = new Charger();
        wired.supply();
        System.out.println("--------------------------");
        Charger charger = new WirelessCharger();
        charger.supply();
        System.out.println("--------------------------");
        WirelessCharger pixelStand = new WirelessCharger();
        pixelStand.supply();
        pixelStand.detect(wired);
        pixelStand.detect(null);
        System.out.println("==========================");

        Skin skin = new Skin();
        skin.protect();
        System.out.println("--------------------------");
        Skin sensitive = new DrySkin();
        sensitive.protect();
        System.out.println("--------------------------");
        DrySkin winterSkin = new DrySkin();
        winterSkin.protect();
        winterSkin.moisturize(skin);
        winterSkin.moisturize(null);
        System.out.println("==========================");

        Mug ceramic = new Mug();
        ceramic.hold();
        System.out.println("--------------------------");
        Mug branded = new CoffeeMug();
        branded.hold();
        System.out.println("--------------------------");
        CoffeeMug officeMug = new CoffeeMug();
        officeMug.hold();
        officeMug.sip(ceramic);
        officeMug.sip(null);
        System.out.println("==========================");

        SandSwitch sand = new SandSwitch();
        sand.serve();
        System.out.println("--------------------------");
        SandSwitch grilled = new GrilledSandSwitch();
        grilled.serve();
        System.out.println("--------------------------");
        GrilledSandSwitch panini = new GrilledSandSwitch();
        panini.serve();
        panini.toast(sand);
        panini.toast(null);
        System.out.println("==========================");

        Monitor monitor = new Monitor();
        monitor.display();
        System.out.println("--------------------------");
        Monitor slim = new LedMonitor();
        slim.display();
        System.out.println("--------------------------");
        LedMonitor dell = new LedMonitor();
        dell.display();
        dell.adjustBrightness(monitor);
        dell.adjustBrightness(null);
        System.out.println("==========================");

        Scooty tvs = new Scooty();
        tvs.ride();
        System.out.println("--------------------------");
        Scooty ola = new ElectricScooty();
        ola.ride();
        System.out.println("--------------------------");
        ElectricScooty ather = new ElectricScooty();
        ather.ride();
        ather.charge(tvs);
        ather.charge(null);
        System.out.println("==========================");

        Stove prestige = new Stove();
        prestige.ignite();
        System.out.println("--------------------------");
        Stove butterfly = new Gasstove();
        butterfly.ignite();
        System.out.println("--------------------------");
        Gasstove sunflame = new Gasstove();
        sunflame.ignite();
        sunflame.regulateFlame(prestige);
        sunflame.regulateFlame(null);
        System.out.println("==========================");

        Canister can = new Canister();
        can.store();
        System.out.println("--------------------------");
        Canister petrol = new FuelCanister();
        petrol.store();
        System.out.println("--------------------------");
        FuelCanister diesel = new FuelCanister();
        diesel.store();
        diesel.seal(can);
        diesel.seal(null);
        System.out.println("==========================");

        Censer clay = new Censer();
        clay.releaseFragrance();
        System.out.println("--------------------------");
        Censer auto = new ElectricCenser();
        auto.releaseFragrance();
        System.out.println("--------------------------");
        ElectricCenser smart = new ElectricCenser();
        smart.releaseFragrance();
        smart.powerOn(clay);
        smart.powerOn(null);
        System.out.println("==========================");

        Blanket wool = new Blanket();
        wool.cover();
        System.out.println("--------------------------");
        Blanket blank = new ElectricBlanket();
        blank.cover();
        System.out.println("--------------------------");
        ElectricBlanket cozy = new ElectricBlanket();
        cozy.cover();
        cozy.heatUp(wool);
        cozy.heatUp(null);
        System.out.println("==========================");

        Rug cotton = new Rug();
        cotton.spread();
        System.out.println("--------------------------");
        Rug rug = new SilkRug();
        rug.spread();
        System.out.println("--------------------------");
        SilkRug silk = new SilkRug();
        silk.spread();
        silk.fold(cotton);
        silk.fold(null);
        System.out.println("==========================");

        Pitcher steel = new Pitcher();
        steel.pour();
        System.out.println("--------------------------");
        Pitcher matka = new ClayPitcher();
        matka.pour();
        System.out.println("--------------------------");
        ClayPitcher earthen = new ClayPitcher();
        earthen.pour();
        earthen.clean(steel);
        earthen.clean(null);
        System.out.println("==========================");

        Cradle basicCradle = new Cradle();
        basicCradle.rock();
        System.out.println("--------------------------");
        Cradle woodenCradle = new WoodenCradle();
        woodenCradle.rock();
        System.out.println("--------------------------");
        WoodenCradle premiumCradle = new WoodenCradle();
        premiumCradle.rock();
        premiumCradle.paint(basicCradle);
        premiumCradle.paint(null);
        System.out.println("==========================");

        Pincer basicPincer = new Pincer();
        basicPincer.grip();
        System.out.println("--------------------------");
        Pincer sharpPincer = new MetalPincer();
        sharpPincer.grip();
        System.out.println("--------------------------");
        MetalPincer durablePincer = new MetalPincer();
        durablePincer.grip();
        durablePincer.sharpen(basicPincer);
        durablePincer.sharpen(null);
        System.out.println("==========================");

        Flagon basicFlagon = new Flagon();
        basicFlagon.hold();
        System.out.println("--------------------------");
        Flagon ceramicFlagon = new CeramicFlagon();
        ceramicFlagon.hold();
        System.out.println("--------------------------");
        CeramicFlagon elegantFlagon = new CeramicFlagon();
        elegantFlagon.hold();
        elegantFlagon.clean(basicFlagon);
        elegantFlagon.clean(null);
        System.out.println("==========================");

        JossStick regularStick = new JossStick();
        regularStick.burn();
        System.out.println("--------------------------");
        JossStick incenseStick = new IncenseJossStick();
        incenseStick.burn();
        System.out.println("--------------------------");
        IncenseJossStick scentedStick = new IncenseJossStick();
        scentedStick.burn();
        scentedStick.fragrance(regularStick);
        scentedStick.fragrance(null);
        System.out.println("==========================");

        Spitton regularSpitton = new Spitton();
        regularSpitton.use();
        System.out.println("--------------------------");
        Spitton metalSpitton = new MetalSpitton();
        metalSpitton.use();
        System.out.println("--------------------------");
        MetalSpitton advancedSpitton = new MetalSpitton();
        advancedSpitton.use();
        advancedSpitton.clean(regularSpitton);
        advancedSpitton.clean(null);
        System.out.println("==========================");

        Chandelier regularChandelier = new Chandelier();
        regularChandelier.illuminate();
        System.out.println("--------------------------");
        Chandelier crystalChandelier = new CrystalChandelier();
        crystalChandelier.illuminate();
        System.out.println("--------------------------");
        CrystalChandelier fancyChandelier = new CrystalChandelier();
        fancyChandelier.illuminate();
        fancyChandelier.polish(regularChandelier);
        fancyChandelier.polish(null);
        System.out.println("==========================");

        Tong regularTong = new Tong();
        regularTong.grip();
        System.out.println("--------------------------");
        Tong cookingTong = new CookingTong();
        cookingTong.grip();
        System.out.println("--------------------------");
        CookingTong specializedTong = new CookingTong();
        specializedTong.grip();
        specializedTong.clean(regularTong);
        specializedTong.clean(null);
        System.out.println("==========================");

        Mixture regularMixture = new Mixture();
        regularMixture.mix();
        System.out.println("--------------------------");
        Mixture spiceMixture = new SpiceMixture();
        spiceMixture.mix();
        System.out.println("--------------------------");
        SpiceMixture spicyMixture = new SpiceMixture();
        spicyMixture.mix();
        spicyMixture.grind(regularMixture);
        spicyMixture.grind(null);
       System.out.println("==========================");

        Cylinder regularCylinder = new Cylinder();
        regularCylinder.rotate();
        System.out.println("--------------------------");
        Cylinder hollowCylinder = new HollowCylinder();
        hollowCylinder.rotate();
        System.out.println("--------------------------");
        HollowCylinder specialHollowCylinder = new HollowCylinder();
        specialHollowCylinder.rotate();
        specialHollowCylinder.inspect(regularCylinder);
        specialHollowCylinder.inspect(null);
       System.out.println("==========================");

        Lid regularLid = new Lid();
        regularLid.cover();
        System.out.println("--------------------------");
        Lid plasticLid = new PlasticLid();
        plasticLid.cover();
        System.out.println("--------------------------");
        PlasticLid specializedPlasticLid = new PlasticLid();
        specializedPlasticLid.cover();
        specializedPlasticLid.checkFit(regularLid);
        specializedPlasticLid.checkFit(null);
        System.out.println("==========================");

        Cauldron regularCauldron = new Cauldron();
        regularCauldron.boil();
        System.out.println("--------------------------");
        Cauldron ironCauldron = new IronCauldron();
        ironCauldron.boil();
        System.out.println("--------------------------");
        IronCauldron specializedIronCauldron = new IronCauldron();
        specializedIronCauldron.boil();
        specializedIronCauldron.heat(regularCauldron);
        specializedIronCauldron.heat(null);
        System.out.println("==========================");

        Fire regularFire = new Fire();
        regularFire.ignite();
        System.out.println("--------------------------");
        Fire campfire = new Campfire();
        campfire.ignite();
        System.out.println("--------------------------");
        Campfire specialCampfire = new Campfire();
        specialCampfire.ignite();
        specialCampfire.warmUp(regularFire);
        specialCampfire.warmUp(null);
        System.out.println("==========================");

        Fog regularFog = new Fog();
        regularFog.appear();
        System.out.println("--------------------------");
        Fog morningFog = new MorningFog();
        morningFog.appear();
        System.out.println("--------------------------");
        MorningFog specialMorningFog = new MorningFog();
        specialMorningFog.appear();
        specialMorningFog.dissipate(regularFog);
        specialMorningFog.dissipate(null);
        System.out.println("==========================");

        Pan regularPan = new Pan();
        regularPan.cook();
        System.out.println("--------------------------");
        Pan fryingPan = new FryingPan();
        fryingPan.cook();
        System.out.println("--------------------------");
        FryingPan specialFryingPan = new FryingPan();
        specialFryingPan.cook();
        specialFryingPan.fry(regularPan);
        specialFryingPan.fry(null);
        System.out.println("==========================");

        Platter regularPlatter = new Platter();
        regularPlatter.serve();
        System.out.println("--------------------------");
        Platter dinnerPlatter = new DinnerPlatter();
        dinnerPlatter.serve();
        System.out.println("--------------------------");
        DinnerPlatter specialDinnerPlatter = new DinnerPlatter();
        specialDinnerPlatter.serve();
        specialDinnerPlatter.arrange(regularPlatter);
        specialDinnerPlatter.arrange(null);
        System.out.println("==========================");

        RollerPin regularRollerPin = new RollerPin();
        regularRollerPin.roll();
        System.out.println("--------------------------");
        RollerPin woodenRollerPin = new WoodenRollerPin();
        woodenRollerPin.roll();
        System.out.println("--------------------------");
        WoodenRollerPin specialWoodenRollerPin = new WoodenRollerPin();
        specialWoodenRollerPin.roll();
        specialWoodenRollerPin.smoothen(regularRollerPin);
        specialWoodenRollerPin.smoothen(null);
        System.out.println("==========================");

        Spice regularSpice = new Spice();
        regularSpice.flavor();
        System.out.println("--------------------------");
        Spice chiliSpice = new ChiliSpice();
        chiliSpice.flavor();
        System.out.println("--------------------------");
        ChiliSpice specialChiliSpice = new ChiliSpice();
        specialChiliSpice.flavor();
        specialChiliSpice.addHeat(regularSpice);
        specialChiliSpice.addHeat(null);
        System.out.println("==========================");

        Ginger regularGinger = new Ginger();
        regularGinger.flavor();
        System.out.println("--------------------------");
        Ginger garlicGinger = new GarlicGinger();
        garlicGinger.flavor();
        System.out.println("--------------------------");
        GarlicGinger specialGarlicGinger = new GarlicGinger();
        specialGarlicGinger.flavor();
        specialGarlicGinger.blend(regularGinger);
        specialGarlicGinger.blend(null);
        System.out.println("==========================");

        Chopper regularChopper = new Chopper();
        regularChopper.chop();
        System.out.println("--------------------------");
        Chopper vegetableChopper = new VegetableChopper();
        vegetableChopper.chop();
        System.out.println("--------------------------");
        VegetableChopper specialVegetableChopper = new VegetableChopper();
        specialVegetableChopper.chop();
        specialVegetableChopper.dice(regularChopper);
        specialVegetableChopper.dice(null);
        System.out.println("==========================");

        Turmeric regularTurmeric = new Turmeric();
        regularTurmeric.flavor();
        System.out.println("--------------------------");
        Turmeric curcuminTurmeric = new CurcuminTurmeric();
        curcuminTurmeric.flavor();
        System.out.println("--------------------------");
        CurcuminTurmeric specialCurcuminTurmeric = new CurcuminTurmeric();
        specialCurcuminTurmeric.flavor();
        specialCurcuminTurmeric.boostHealth(regularTurmeric);
        specialCurcuminTurmeric.boostHealth(null);
        System.out.println("==========================");

        Cardamom regularCardamom = new Cardamom();
        regularCardamom.aroma();
        System.out.println("--------------------------");
        Cardamom greenCardamom = new GreenCardamom();
        greenCardamom.aroma();
        System.out.println("--------------------------");
        GreenCardamom specialGreenCardamom = new GreenCardamom();
        specialGreenCardamom.aroma();
        specialGreenCardamom.enhanceFlavor(regularCardamom);
        specialGreenCardamom.enhanceFlavor(null);
        System.out.println("==========================");

        Pepper regularPepper = new Pepper();
        regularPepper.spice();
        System.out.println("--------------------------");
        Pepper blackPepper = new BlackPepper();
        blackPepper.spice();
        System.out.println("--------------------------");
        BlackPepper specialBlackPepper = new BlackPepper();
        specialBlackPepper.spice();
        specialBlackPepper.enhanceTaste(regularPepper);
        specialBlackPepper.enhanceTaste(null);
        System.out.println("==========================");

        Jar regularJar = new Jar();
        regularJar.store();
        System.out.println("--------------------------");
        Jar glassJar = new GlassJar();
        glassJar.store();
        System.out.println("--------------------------");
        GlassJar specialGlassJar = new GlassJar();
        specialGlassJar.store();
        specialGlassJar.preserve(regularJar);
        specialGlassJar.preserve(null);
        System.out.println("==========================");

        Wok regularWok = new Wok();
        regularWok.cook();
        System.out.println("--------------------------");
        Wok stainlessSteelWok = new StainlessSteelWok();
        stainlessSteelWok.cook();
        System.out.println("--------------------------");
        StainlessSteelWok specialWok = new StainlessSteelWok();
        specialWok.cook();
        specialWok.stirFry(regularWok);
        specialWok.stirFry(null);
        System.out.println("==========================");

        Whisk regularWhisk = new Whisk();
        regularWhisk.mix();
        System.out.println("--------------------------");
        Whisk electricWhisk = new ElectricWhisk();
        electricWhisk.mix();
        System.out.println("--------------------------");
        ElectricWhisk specialElectricWhisk = new ElectricWhisk();
        specialElectricWhisk.mix();
        specialElectricWhisk.whiskWithSpeed(regularWhisk);
        specialElectricWhisk.whiskWithSpeed(null);
        System.out.println("==========================");

        Masher regularMasher = new Masher();
        regularMasher.mash();
        System.out.println("--------------------------");
        Masher potatoMasher = new PotatoMasher();
        potatoMasher.mash();
        System.out.println("--------------------------");
        PotatoMasher specialPotatoMasher = new PotatoMasher();
        specialPotatoMasher.mash();
        specialPotatoMasher.mashWithStyle(regularMasher);
        specialPotatoMasher.mashWithStyle(null);
        System.out.println("==========================");

        Frog regularFrog = new Frog();
        regularFrog.jump();
        System.out.println("--------------------------");
        Frog treeFrog = new TreeFrog();
        treeFrog.jump();
        System.out.println("--------------------------");
        TreeFrog specialTreeFrog = new TreeFrog();
        specialTreeFrog.jump();
        specialTreeFrog.croak(regularFrog);
        specialTreeFrog.croak(null);
        System.out.println("==========================");

        Root rootObj = new Root();
        rootObj.grow();
        System.out.println("--------------------------");
        Root treeObj = new Tree();
        treeObj.grow();
        System.out.println("--------------------------");
        Tree specificTree = new Tree();
        specificTree.grow();
        specificTree.shade(rootObj);
        specificTree.shade(null);
        System.out.println("==========================");

        Desert generalDesert = new Desert();
        generalDesert.climate();
        System.out.println("--------------------------");
        Desert sandyDesert = new SandyDesert();
        sandyDesert.climate();
        System.out.println("--------------------------");
        SandyDesert specificSandyDesert = new SandyDesert();
        specificSandyDesert.climate();
        specificSandyDesert.sandStorm(generalDesert);
        specificSandyDesert.sandStorm(null);
        System.out.println("==========================");

        Steel steelObj = new Steel();
        steelObj.strength();
        System.out.println("--------------------------");
        Steel stainlessSteelObj = new StainlessSteel();
        stainlessSteelObj.strength();
        System.out.println("--------------------------");
        StainlessSteel specificStainlessSteel = new StainlessSteel();
        specificStainlessSteel.strength();
        specificStainlessSteel.polish(steelObj);
        specificStainlessSteel.polish(null);
        System.out.println("==========================");

        Copper copperObj = new Copper();
        copperObj.conductivity();
        System.out.println("--------------------------");
        Copper pureCopperObj = new PureCopper();
        pureCopperObj.conductivity();
        System.out.println("--------------------------");
        PureCopper specificPureCopper = new PureCopper();
        specificPureCopper.conductivity();
        specificPureCopper.polish(copperObj);
        specificPureCopper.polish(null);
        System.out.println("==========================");

        Window windowObj = new Window();
        windowObj.open();
        System.out.println("--------------------------");
        Window glassWindowObj = new GlassWindow();
        glassWindowObj.open();
        System.out.println("--------------------------");
        GlassWindow specificGlassWindow = new GlassWindow();
        specificGlassWindow.open();
        specificGlassWindow.clean(windowObj);
        specificGlassWindow.clean(null);
        System.out.println("==========================");

        Rapper rapperObj = new Rapper();
        rapperObj.perform();
        System.out.println("--------------------------");
        Rapper hipHopRapperObj = new HipHopRapper();
        hipHopRapperObj.perform();
        System.out.println("--------------------------");
        HipHopRapper specificHipHopRapper = new HipHopRapper();
        specificHipHopRapper.perform();
        specificHipHopRapper.freestyle(rapperObj);
        specificHipHopRapper.freestyle(null);

        Handle handleObj = new Handle();
        handleObj.turn();
        System.out.println("--------------------------");
        Handle doorHandleObj = new DoorHandle();
        doorHandleObj.turn();
        System.out.println("--------------------------");
        DoorHandle specificDoorHandle = new DoorHandle();
        specificDoorHandle.turn();
        specificDoorHandle.install(handleObj);
        specificDoorHandle.install(null);
        System.out.println("==========================");

        Screen screenObj = new Screen();
        screenObj.display();
        System.out.println("--------------------------");
        Screen touchScreenObj = new TouchScreen();
        touchScreenObj.display();
        System.out.println("--------------------------");
        TouchScreen specificTouchScreen = new TouchScreen();
        specificTouchScreen.display();
        specificTouchScreen.touch();
        System.out.println("==========================");

        Ant antObj = new Ant();
        antObj.work();
        System.out.println("--------------------------");
        Ant workerAntObj = new WorkerAnt();
        workerAntObj.work();
        System.out.println("--------------------------");
        WorkerAnt specificWorkerAnt = new WorkerAnt();
        specificWorkerAnt.work();
        specificWorkerAnt.dig();
        System.out.println("==========================");

        Syntax syntaxObj = new Syntax();
        syntaxObj.explain();
        System.out.println("--------------------------");
        Syntax programmingSyntaxObj = new ProgrammingSyntax();
        programmingSyntaxObj.explain();
        System.out.println("--------------------------");
        ProgrammingSyntax specificProgrammingSyntax = new ProgrammingSyntax();
        specificProgrammingSyntax.explain();
        specificProgrammingSyntax.examples();
        System.out.println("==========================");

        Zoo zooObj = new Zoo();
        zooObj.exhibitAnimals();
        System.out.println("--------------------------");
        Zoo safariZooObj = new SafariZoo();
        safariZooObj.exhibitAnimals();
        System.out.println("--------------------------");
        SafariZoo specificSafariZoo = new SafariZoo();
        specificSafariZoo.exhibitAnimals();
        specificSafariZoo.safariRide();
        System.out.println("==========================");

        Sundisk sundiskObj = new Sundisk();
        sundiskObj.storeData();
        System.out.println("--------------------------");
        Sundisk flashSundiskObj = new FlashSundisk();
        flashSundiskObj.storeData();
        System.out.println("--------------------------");
        FlashSundisk specificFlashSundisk = new FlashSundisk();
        specificFlashSundisk.storeData();
        specificFlashSundisk.fastReadWrite();
        System.out.println("==========================");

        Route routeObj = new Route();
        routeObj.planRoute();
        System.out.println("--------------------------");
        Route advancedRouteObj = new AdvancedRoute();
        advancedRouteObj.planRoute();
        System.out.println("--------------------------");
        AdvancedRoute specificAdvancedRoute = new AdvancedRoute();
        specificAdvancedRoute.planRoute();
        specificAdvancedRoute.addScenicRoute();
        System.out.println("==========================");

        Lizard lizardObj = new Lizard();
        lizardObj.move();
        lizardObj.makeSound();
        System.out.println("--------------------------");
        Lizard geckoObj = new Gecko();
        geckoObj.move();
        geckoObj.makeSound();
        System.out.println("--------------------------");
        Gecko specificGecko = new Gecko();
        specificGecko.move();
        specificGecko.makeSound();
        specificGecko.changeColor();
        System.out.println("==========================");

        Stage stageObj = new Stage();
        stageObj.setupStage();
        stageObj.showPerformance();
        System.out.println("--------------------------");
        Stage concertStageObj = new ConcertStage();
        concertStageObj.setupStage();
        concertStageObj.showPerformance();
        System.out.println("--------------------------");
        ConcertStage specificConcertStage = new ConcertStage();
        specificConcertStage.setupStage();
        specificConcertStage.showPerformance();
        specificConcertStage.arrangeSeating();
        System.out.println("==========================");

        Garden gardenObj = new Garden();
        gardenObj.plant();
        gardenObj.water();
        System.out.println("--------------------------");
        Garden flowerGardenObj = new FlowerGarden();
        flowerGardenObj.plant();
        flowerGardenObj.water();
        System.out.println("--------------------------");
        FlowerGarden specificFlowerGarden = new FlowerGarden();
        specificFlowerGarden.plant();
        specificFlowerGarden.water();
        specificFlowerGarden.arrangeFlowers();
        System.out.println("==========================");

        Flashcard flashcardObj = new Flashcard();
        flashcardObj.displayFront();
        flashcardObj.displayBack();
        System.out.println("--------------------------");
        Flashcard studyFlashcardObj = new StudyFlashcard();
        studyFlashcardObj.displayFront();
        studyFlashcardObj.displayBack();
        System.out.println("--------------------------");
        StudyFlashcard specificStudyFlashcard = new StudyFlashcard();
        specificStudyFlashcard.displayFront();
        specificStudyFlashcard.displayBack();
        specificStudyFlashcard.review();
        System.out.println("==========================");

        Letter letterObj = new Letter();
        letterObj.write();
        letterObj.send();
        System.out.println("--------------------------");
        Letter greetingLetterObj = new GreetingLetter();
        greetingLetterObj.write();
        greetingLetterObj.send();
        System.out.println("--------------------------");
        GreetingLetter specificGreetingLetter = new GreetingLetter();
        specificGreetingLetter.write();
        specificGreetingLetter.send();
        specificGreetingLetter.addGreeting();
        System.out.println("==========================");





    }


}

